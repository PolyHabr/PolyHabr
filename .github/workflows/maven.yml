# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
#
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

concurrency:
  group: ci-${{ github.ref }}-group
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.7.0]

    steps:
      - name: Setup DB
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '12'
          postgresql db: postgres
          postgresql user: postgres
          postgresql password: postgres

      - name: Pull repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - name: Cypress run
        uses: cypress-io/github-action@v5.6.1 # use the explicit version number
        with:
          working-directory: ./frontend
          build: npm run build
          start: npm start
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Run build
        run: mvn install -DskipTests --file backend/pom.xml

      - name: Run Unit Test
        run: mvn surefire:test --file backend/pom.xml

      - name: Run Integration Test
        run: mvn failsafe:integration-test --file backend/pom.xml
